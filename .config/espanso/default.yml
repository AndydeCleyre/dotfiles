---
backend: Clipboard
fast_inject: false
enable_passive: true
passive_key: CTRL

matches:

  - trigger: :spotify
    replace: "{{uri}}"
    vars:
      - name: uri
        type: shell
        params:
          cmd: >
            xclip -sel clip -o |
            sed -E 's-^https?://open\.spotify\.com/(.*)-\1-g' |
            sed 's-/-:-g' | sed 's/\?.*//g'

  - trigger: :paste
    replace: "{{clipboard}}"
    vars:
      - name: clipboard
        type: shell
        params:
          cmd: xclip -sel clip -o

  - trigger: :klong
    replace: >-
      Hello! Please, absolutely no fish/shellfish/shrimp/oyster/clam sauce
      or ingredients in this. Thanks!

  - trigger: :ip
    replace: "{{address}}"
    vars:
      - name: address
        type: shell
        params:
          cmd: >
            json="$(https ipinfo.io)" &&
            jsonpath_ng ip <<<$json &&
            notify-send -a "IP Provider"
            "$(jsonpath_ng org <<<$json)"
            "$(jsonpath_ng city <<<$json), $(jsonpath_ng region <<<$json), $(jsonpath_ng country <<<$json)"
            || true

# TODO: jsonpath_ng city,region,country
# with ', ' separator for output. can jpng do that?
# or should I use shell to split on newlines, then join with ', '?

  # - trigger: :ip
    # replace: "{{address}}"
    # vars:
      # - name: address
        # type: shell
        # params:
          # cmd: >
            # json="$(https ipinfo.io)" &&
            # notify-send 'IP Provider' "$(jello -r '"\n".join((_["org"], ", ".join((_["city"], _["region"], _["country"]))))' <<<$json)" &&
            # jello -r '_["ip"]' <<<$json

  - trigger: :local
    replace: "{{address}}"
    vars:
      - name: address
        type: shell
        params:
          debug: true
          cmd: 'ip addr | pcre2grep -M -O ''$2'' ''^\d: wlan0: (.*\n[^\d])*.* inet ((\d+\.){3}\d+)/'''
          # shell: bash
          # cmd: 'nmcli device show wlan0 | pcre2grep -M -O ''$1'' ''^IP4.ADDRESS\[1\]: *(.*)/.*'''

  - trigger: ":date"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%m/%d/%Y"

  - trigger: :pf
    replace: 'printf ''%s\n'' '

  - trigger: :fzf
    replace: fzf --reverse -m -0

  - trigger: :gr
    replace: '"$(git rev-parse --show-toplevel)"'

  - trigger: :here
    replace: '"$(dirname "$0")"'

  - trigger: :adc
    replace: andydecleyre
